begin
   read first input line 
   if OPCODE 'START' then
	begin
	   Save #[OPERAND] as starting address 
	   initialize LOCCTR as starting address
	   read next input line 
	end (if START)
	else
	   initialize LOCCTR to 0
	while OPCODE != 'END'
	do
	  begin
		if there is not a comment line then 
		   begin
			if there is a symbol in the LABEL field then
			   begin
				search SYMTAB for LABEL
				if found then
				   begin
					if symbol value as null
					set symbol value as LOCCTR and search
					the linked list with the corresponding
					operand
					PTR addresses and generate operand 
					addresses as corresponding symbol
					values 
					set symbol value as LOCCTR in symbol
					table and delete the linked list			
				   end
				else
				   insert (LABEL, LOCCTR) into SYMTAB end
			   end
			   search OPTAB for OPCODE
			   if found then 
				begin
				   search SYMTAB for OPERAND address
				   if found then 
					if symbol value not equal to null then 
					store symbol value as OPERAND address 
					else
					insert at the end of the linked list
					with a node with address as LOCCTR
			   else
				insert (symbol name, null)
				add 3 to LOCCTR
			  end 
			else if OPCODE ='WORD' then
			   add 3 to LOCCTR & convert comment to object code
			else if OPCODE='RESW' then
			   add 3 [OPERAND] to LOCCTR 
			else if OPCODE='RESB' then
			   add (OPERAND] to LOCCTR 
			else if OPCODE='BYTE' then
			begin
			   find length of constant in bytes 
			   add length to LOCCTR
			   convert constant to object code
			end
	   	   if object code will not fit into current
		   text record then
			begin
			  write text record to object program 
			  initialize new text record 
			end
		   add object code to Text record
		end
		write listing line
		read next input line
	   end
	write last Text record to object program
	write End record to object program
	write last listing line
end (Pass 1)